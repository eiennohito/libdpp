package ws.eiennohito.jdpp.bridj;


import org.bridj.BridJ;
import org.bridj.CRuntime;
import org.bridj.Pointer;
import org.bridj.ann.Library;
import org.bridj.ann.Runtime;
/**
 * Wrapper for library <b>jdpp</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> or <a href="http://bridj.googlecode.com/">BridJ</a> .
 */
@Library("dpp")
@Runtime(CRuntime.class)
public class LibDpp {
  static {
    BridJ.register();
  }
  /**
   * typedef void *dpp_c_selector;<br>
   * Original signature : <code>dpp_c_kernel dpp_create_c_kernel(double*, i64, i64)</code><br>
   * <i>native declaration : line 14</i>
   */
  public static native Pointer<? > dpp_create_c_kernel(Pointer<Double > data, long ndim, long size);
  /**
   * Original signature : <code>void dpp_delete_c_kernel(dpp_c_kernel)</code><br>
   * <i>native declaration : line 15</i>
   */
  public static native void dpp_delete_c_kernel(Pointer<? > kernel);
  /**
   * Original signature : <code>void dpp_select_from_c(dpp_c_kernel, i64, i64*)</code><br>
   * <i>native declaration : line 17</i>
   */
  public static native void dpp_select_from_c(Pointer<? > kernel, long nitems, Pointer<Long > buffer);
}
